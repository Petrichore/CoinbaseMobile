image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "30"
  ANDROID_BUILD_TOOLS: "30.0.3"
  ANDROID_SDK_TOOLS:   "4333796"
  SSH_PRIVATE_KEY: "b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
                    QyNTUxOQAAACBp9dWn22PMMNbZI+T0NRZUa8bo9uNUJ12jQdZLocquHAAAAKD8G0DW/BtA
                    1gAAAAtzc2gtZWQyNTUxOQAAACBp9dWn22PMMNbZI+T0NRZUa8bo9uNUJ12jQdZLocquHA
                    AAAEDfB8xwvW2IgiL0RdOOHAZDxpJC544rdFedJ4BWNjylbmn11afbY8ww1tkj5PQ1FlRr
                    xuj241QnXaNB1kuhyq4cAAAAGWl2YW5AaXZhbi1SZWRtaUJvb2stMTQtSUkBAgME"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build

#lintDebug:
#  stage: build
#  script:
#    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  stage: build
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Optionally, if you will be using any Git commands, set the user name and
    ## and email.
    ##
    # - git config --global user.email "user@example.com"
    # - git config --global user.name "User name"

  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/
  after_script:
    - ./gradlew testAfterJobTask
    - export PUSH_DESTINATION=$(echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#')
    - git remote set-url --push origin "${PUSH_DESTINATION}"
    - git config user.email "stefanenkoivi@gmail.com"
    - git config user.name "Ivan Stefanenko"
    - echo $CI_REPOSITORY_URL
    - echo $CI_COMMIT_REF_NAME
    - git status
    - git show-ref
    - git add app/version.properties
    - git commit -m 'update versionCode'
    - git push origin HEAD:${CI_COMMIT_REF_NAME}