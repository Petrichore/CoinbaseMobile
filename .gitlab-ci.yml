image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "30"
  ANDROID_BUILD_TOOLS: "30.0.3"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  # install ssh-agent
  - which ssh-agent || (apk add --update --no-cache openssh-client)
  # run ssh-agent
  - eval $(ssh-agent -s)
  # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
  - echo "$SSH_PRIVATE_KEY" > /tmp/gitlab_ci_ssh
  - chmod 600 /tmp/gitlab_ci_ssh
  - ssh-add /tmp/gitlab_ci_ssh
#  # disable host key checking (NOTE: makes you susceptible to man-in-the-middle attacks)
#  # WARNING: use only in docker container, if you use it with shell you will overwrite your user's ssh config
#  - mkdir -p ~/.ssh
#  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config


stages:
  - build

#lintDebug:
#  stage: build
#  script:
#    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint
assembleDebug:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/
  after_script:
    - echo $SSH_PRIVATE_KEY
    - git remote -v
    - ./gradlew testAfterJobTask
    - git config user.email "stefanenkoivi@gmail.com"
    - git config user.name "Ivan Stefanenko"
    - export PUSH_DESTINATION=git@gitlab.com:Ob1van/coinbasemobile.git
    - git remote set-url --add --push origin "${PUSH_DESTINATION}"
    - git remote -v
    - echo $PUSH_DESTINATION
    - echo $CI_REPOSITORY_URL
    - echo $CI_COMMIT_REF_NAME
    - git status
    - git show-ref
    - git add app/version.properties
    - git commit -m 'update versionCode'
    - git push origin HEAD:${CI_COMMIT_REF_NAME}