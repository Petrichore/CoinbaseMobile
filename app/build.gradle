plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'androidx.navigation.safeargs.kotlin'
}
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.stefanenko.coinbase"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 2
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyPassword 'coinbase'
            storeFile file('keystore/key-store')
            storePassword 'coinbase'
            keyAlias 'key-debug'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

project.ext.versionProperties = new Properties()

task configFile {
    def versionPropsFile = file("version.properties")

    if (versionPropsFile.exists()) {
        def fileInputStream = new FileInputStream(versionPropsFile)
        versionProperties.load(fileInputStream)
    } else {
        throw new FileNotFoundException("File version.properties doesn't exist")
    }
}

task testTask1 {
    doLast {
        // def versionCode = (versionProperties["versionCode"]).toInteger()
        def versionCode = 100

        versionProperties["versionCode"] = versionCode.toString()
        versionProperties.store(file("version.properties").newWriter(), null)

        println "Task1: ${versionProperties["versionCode"]}"
    }
}

task testTask2 {
    doLast{
        // def versionCode = (versionProperties["versionCode"]).toInteger()
        def versionCode = 200

        versionProperties["versionCode"] = versionCode.toString()
        versionProperties.store(file("version.properties").newWriter(), null)

        println "Task2: ${versionProperties["versionCode"]}"
    }
}

task testAfterJobTask {
    doLast {
        def versionCode = (versionProperties["versionCode"]).toInteger() + 100

        versionProperties["versionCode"] = versionCode.toString()
        versionProperties.store(file("version.properties").newWriter(), null)

        println "TaskAfterJob: ${versionProperties["versionCode"]}"
    }
}

dependencies {

    //core
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'

    //Test
    implementation "androidx.test:core:1.3.0"
    testImplementation 'junit:junit:4.13.1'
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation "com.google.truth:truth:1.1.2"
    androidTestImplementation "com.google.truth:truth:1.1.2"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    kaptTest "com.google.dagger:dagger-compiler:2.30.1"
    //kaptAndroidTest "com.google.dagger:dagger-compiler:2.30.1"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    debugImplementation "androidx.fragment:fragment-testing:1.2.5"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"
    testImplementation "android.arch.core:core-testing:1.1.1"

    //Layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    //Architecture component
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "androidx.room:room-compiler:$room_version"

    //Chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //RX
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation(project(':data'))
    implementation(project(':domain'))
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}